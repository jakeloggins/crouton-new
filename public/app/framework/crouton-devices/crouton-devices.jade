link(rel="import", href="/static/common/bower/polymer/polymer.html")
link(rel="import", href="/static/common/bower/paper-input/paper-input.html")
link(rel="import", href="/static/common/bower/paper-button/paper-button.html")

link(rel="import", href="/static/common/bower/paper-item/paper-item.html")
link(rel="import", href="/static/common/bower/paper-listbox/paper-listbox.html")
link(rel="import", href="/static/common/bower/paper-dropdown-menu/paper-dropdown-menu.html")
link(rel="import", href="/static/common/bower/paper-toolbar/paper-toolbar.html")
link(rel="import", href="/static/common/bower/paper-icon-button/paper-icon-button.html")

link(rel="import", href="/static/common/bower/iron-form/iron-form.html")
link(rel="import", href="/app-render/framework/crouton-card/crouton-card.jade")
link(rel="import", href="/app-render/framework/crouton-device-card/crouton-device-card.jade")


dom-module(id="crouton-devices")
  template
    link(rel="stylesheet", href="crouton-devices.css")
    crouton-card(drop-shadow="false", bottom-bar="false").grid__col.grid__col--12-of-12
      p.header
        span Devices
        template(is="dom-if", if="{{!devices.length}}")
          span.subTitle no devices
        template(is="dom-if", if="{{devices.length}}")
          span.subTitle
            span {{devices.length}}
            span   device(s)
      template(is="dom-repeat", items="{{devices}}")
        crouton-device-card(id="{{deviceId(item)}}", device-name="{{item}}")
      div
        paper-toolbar
          paper-input.grid__col--2-of-12(label="Enter new device name", type="text", value="{{newDeviceName::input}}", on-keypress="keyCheck", required)
          paper-item(id="simple_text", on-click="validateCardType") Simple Text
          paper-item(id="simple_input", on-click="validateCardType") Simple Input
          paper-item(id="simple_slider", on-click="validateCardType") Simple Slider
          paper-item(id="simple_button", on-click="validateCardType") Simple Button
          paper-item(id="simple_toggle", on-click="validateCardType") Simple Toggle
          paper-item(id="line_chart", on-click="validateCardType") Line Chart
          paper-item(id="donut_chart", on-click="validateCardType") Donut Chart
          paper-item(id="rgb_slider", on-click="validateCardType") RGB Slider
          paper-input.grid__col--3-of-12(label="Enter path", type="text", value="{{newPath::input}}", on-keypress="keyCheck", required)
        paper-toolbar
          paper-input.grid__col--2-of-12(label="Enter card title", type="text", value="{{newCardTitle::input}}", on-keypress="keyCheck", required)
          paper-input.grid__col--3-of-12(label="{{UnitsOptional}}", type="text", value="{{newUnits::input}}", on-keypress="keyCheck", disabled="{{!newUnitsDisabled}}", required="{{newUnitsRequired}}")
          paper-input.grid__col--2-of-12(label="{{MinOptional}}", type="text", value="{{newUnitsMin::input}}", on-keypress="keyCheck", disabled="{{!newUnitsMinDisabled}}", required="{{newUnitsMinRequired}}")
          paper-input.grid__col--2-of-12(label="{{MaxOptional}}", type="text", value="{{newUnitsMax::input}}", on-keypress="keyCheck", disabled="{{!newUnitsMaxDisabled}}", required="{{newUnitsMaxRequired}}")  
          div.addButtons.grid__col--3-of-12
            paper-button(type="submit", disabled$="{{validateNewDeviceInput(newDeviceName,newPath,newCardTitle)}}", on-click="addDevice", raised).rightBtn Add Device



  style(is='custom-style').
    paper-toolbar{
      --paper-toolbar-background: rgb(250,250,250);
      --paper-toolbar-content: {
        color: grey;
      };
    }
    paper-item{
      padding-left: 10px;
      padding-right: 10px;
      padding-top: 30px;
      padding-bottom: 0px;
      font-size: 16px;
    }
    paper-input{
      --paper-input-container-focus-color: grey;
      padding: 20px;
    }

  script.
    (function() {
      Polymer({
        is: "crouton-devices",
        ready: function() {
          var that = this;
          this.devices = [];
          this.newDeviceName = '';
          this.newPath = '';
          this.newCardTitle = '';
          this.newUnits = '';
          this.newUnitsMin = '';
          this.newUnitsMax = '';
          this.newUnitsDisabled = false;
          this.newUnitsMinDisabled = false;
          this.newUnitsMaxDisabled = false;
          this.newUnitsRequired = false;
          this.newUnitsMinRequired = false;
          this.newUnitsMaxRequired = false;
          this.UnitsOptional = 'Enter units (optional)';
          this.MinOptional = 'min value (optional)';
          this.MaxOptional = 'max value (optional)';

          this.deviceCardPrefix = "crouton-device-";

          this.mqttCard = document.getElementById("crouton-mqtt");
          this.mqttConnected = false;

          document.getElementById("crouton-frame").addEventListener("mqttConnection", function(event){
            that.mqttConnected = document.getElementById("crouton-mqtt").connected;
          });

        },
        properties: {

        },
        listeners: {

        },
        attached: function(){
          if (this.mqttCard.storageAvailable('localStorage')) {
            var deviceList = localStorage.getItem("crouton-devicelist");
            if(deviceList){
              var deviceListJson = JSON.parse(deviceList);
              for(var i = 0; i < deviceListJson.devices.length; i++){
                this.addDevice(deviceListJson.devices[i]);
              }
            }
          }
        },
        validateCardType: function(e){
          var allfalse = false;
          var alltrue = false;

          switch (e.target.id) {
            case 'simple_text':
                this.newUnitsDisabled = true;
                this.newUnitsMinDisabled = false;
                this.newUnitsMaxDisabled = false;

                this.newUnitsRequired = false;
                this.newUnitsMinRequired = false;
                this.newUnitsMaxRequired = false;
                break;
            case 'simple_input':
                allfalse = true;
                break;
            case 'simple_slider':
                alltrue = true;
                break;
            case 'simple_button':
                allfalse = true;
                break;
            case 'simple_toggle':
                allfalse = true;
                break;
            case 'line_chart':
                allfalse = true;
                break;    
            case 'donut_chart':
                allfalse = true;
                break;
            case 'rgb_slider':
                this.newUnitsDisabled = false;
                this.newUnitsMinDisabled = true;
                this.newUnitsMaxDisabled = true;

                this.newUnitsRequired = false;
                this.newUnitsMinRequired = false;
                this.newUnitsMaxRequired = false;
                break;
          }
          if (allfalse) {
            this.newUnitsDisabled = false;
            this.newUnitsMinDisabled = false;
            this.newUnitsMaxDisabled = false;
            this.newUnitsRequired = false;
            this.newUnitsMinRequired = false;
            this.newUnitsMaxRequired = false;
          }
          if (alltrue) {
            this.newUnitsDisabled = true;
            this.newUnitsMinDisabled = true;
            this.newUnitsMaxDisabled = true;
            this.newUnitsRequired = true;
            this.newUnitsMinRequired = true;
            this.newUnitsMaxRequired = true;
          }
          if (!this.newUnitsDisabled) {
            this.newUnits = '';
          }
          if (!this.newUnitsMinDisabled) {
            this.newUnitsMin = '';
          } 
          if (!this.newUnitsMaxDisabled) {
            this.newUnitsMax = '';
          } 

          if (this.newUnitsRequired) {
            this.UnitsOptional = 'Enter units (required)';
          } else {
            this.UnitsOptional = 'Enter units (optional)';
          }
          if (this.newUnitsMinRequired) {
            this.MinOptional = 'min value (required)';
          } else {
            this.MinOptional = 'min value (optional)';
          }
          if (this.newUnitsMaxRequired) {
            this.MaxOptional = 'max value (required)';
          } else {
            this.MaxOptional = 'max value (optional)';
          }
        },
        validateNewDeviceInput: function(newDeviceName,newPath,newCardTitle){
          //making sure there is a name not just white spaces... also need to filter special characteres later too
          if((newDeviceName && newPath && newCardTitle === null) || (newCardTitle.match(/^ *$/) || newDeviceName.match(/^ *$/) || newPath.match(/^ *$/)) !== null ){
            return true
          } else {
            return false
          }
        },
        deviceId: function(name){
          return this.deviceCardPrefix + name;
        },
        deviceValuePointer: function(name){
          this.values[name] = {};
          return this.values[name];
        },
        keyCheck: function(event){
          if(event.keyCode == 13){
            event.preventDefault();
            this.addDevice();
          }
        },
        addDevice: function(name){
          var that = this;
          // this is how you grab stuff from the forms
          // assign values to buttons, then see which one is true
          console.log(this.newPath);
          if(typeof(name) != "string") {
            name = this.newDeviceName;
          }
          if(this.devices.indexOf(name) === -1){
            this.push('devices', name);
            this.newDeviceName = '';
            this.async(function(){
            this.connectDevice(name);
            }, 100);
          } else {
            this.fire('makeToast', { message: "Uh on! <b>" + name + "</b> already exists as a device", duration: 2000 });
          }
        },
        removeDevice: function(name){
          var index = this.devices.indexOf(name);
          if (index > -1) {
              this.splice('devices', index, 1);
          }
        },
        connectDevice: function(name,autoAdd){
          document.getElementById(this.deviceCardPrefix + name).connectDevice();
        },
        disconnectAllDevices: function(){
          for(var device in this.devices){
            if(typeof(this.devices[device]) == "string"){
              document.getElementById(this.deviceCardPrefix + name).disconnectDevice();
            }
          }
        },
        addDemo: function(){
          this.addDevice("crouton-demo");
        }
      });
    }());
